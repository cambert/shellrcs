--- /home/rw01/.elisp/verilog-mode-558/verilog-mode.el	2010-02-01 09:39:10.747074000 +0000
+++ verilog-mode-558.el	2010-02-01 15:59:48.000000000 +0000
@@ -5261,9 +5261,6 @@
 		   (skip-chars-forward " \t")
 		   (current-column))))
 	(indent-line-to val)
-	(if (and (not (verilog-in-struct-region-p))
-		 (looking-at verilog-declaration-re))
-	    (verilog-indent-declaration ind))
       ))
 
      (;-- Handle the ends
@@ -5627,47 +5624,41 @@
 	(ind)
 	(val)
 	(m1 (make-marker)))
-    (setq val (+ baseind (eval (cdr (assoc 'declaration verilog-indent-alist)))))
+    (setq val
+	  (+ baseind (eval (cdr (assoc 'declaration verilog-indent-alist)))))
     (indent-line-to val)
 
     ;; Use previous declaration (in this module) as template.
     (if (or (eq 'all verilog-auto-lineup)
 	    (eq 'declarations verilog-auto-lineup))
-	(if (verilog-re-search-backward (or (and verilog-indent-declaration-macros
-                                            verilog-declaration-re-1-macro)
-                                       verilog-declaration-re-1-no-macro) lim t)
+	(if (verilog-re-search-backward
+	     (or (and verilog-indent-declaration-macros
+		      verilog-declaration-re-1-macro)
+		 verilog-declaration-re-1-no-macro) lim t)
 	    (progn
 	      (goto-char (match-end 0))
 	      (skip-chars-forward " \t")
 	      (setq ind (current-column))
 	      (goto-char pos)
-	      (setq val (+ baseind (eval (cdr (assoc 'declaration verilog-indent-alist)))))
+	      (setq val
+		    (+ baseind
+		       (eval (cdr (assoc 'declaration verilog-indent-alist)))))
 	      (indent-line-to val)
 	      (if (and verilog-indent-declaration-macros
 		       (looking-at verilog-declaration-re-2-macro))
-        (let ((p (match-end 0)) mbits)
+		  (let ((p (match-end 0)))
 		    (set-marker m1 p)
 		    (if (verilog-re-search-forward "[[#`]" p 'move)
-              (progn
-                (forward-char -1)
-                (just-one-space)
-                (setq mbits (point))
-                (goto-char (marker-position m1))
-                (just-one-space)
-                (if (< (current-column) ind)
-                    (let ((spaces (- ind (current-column))))
-                      (goto-char mbits)
-                      (indent-to (+ (current-column) spaces)))
-                  (indent-to ind)
-                  )
-                )
-            (if (/= (current-column) ind)
-                (progn
-                  (just-one-space)
-                  (indent-to ind))
-              )
-            )
-          )
+			(progn
+			  (forward-char -1)
+			  (just-one-space)
+			  (goto-char (marker-position m1))
+			  (just-one-space)
+			  (indent-to ind))
+		      (if (/= (current-column) ind)
+			  (progn
+			    (just-one-space)
+			    (indent-to ind)))))
 		(if (looking-at verilog-declaration-re-2-no-macro)
 		    (let ((p (match-end 0)))
 		      (set-marker m1 p)
